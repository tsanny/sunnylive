user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        application live {
            live on;
            hls on;
            hls_nested on;
            hls_fragment 2s;
            hls_playlist_length 360s;
            deny play all;
            hls_path /tmp/hls;
            hls_cleanup on;
            on_publish http://127.0.0.1:8000/api/streams/auth/;
            notify_method post;
            on_publish_done http://127.0.0.1:8000/api/streams/done/;
        }
    }
}

http {
    server {
        listen 80;

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'User-Agent,Keep-Alive,Content-Type';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

            auth_request /auth;
            error_page 401 = @error401;

            try_files $uri $uri/ =404;
        }

        location = /auth {
            internal;
            # Extract the stream_id from the original request URI
            set $stream_id '';
            if ($request_uri ~* /hls/(.*)/(index\.m3u8|.*\.ts)$) {
                set $stream_id $1;
            }            
            proxy_pass http://127.0.0.1:8000/api/streams/auth/?stream_id=$stream_id;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        location @error401 {
            return 401;
        }
    }
}

